{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Lesson_Resource_Registration_Login_CRUD Demo\\\\Demo\\\\15. Delete Group\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Lesson_Resource_Registration_Login_CRUD Demo\\\\Demo\\\\15. Delete Group\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Lesson_Resource_Registration_Login_CRUD Demo\\\\Demo\\\\15. Delete Group\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\src\\\\pages\\\\auth\\\\NewPassword.js\";\n\nimport React from \"react\";\nimport { Button, Card, CardBody, FormGroup } from \"reactstrap\";\nimport { Formik, FastField, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport UserApi from '../../api/UserApi';\nimport { useParams } from \"react-router-dom\";\nimport { toastr } from \"react-redux-toastr\";\n\nvar NewPassword = function NewPassword(props) {\n  var _useParams = useParams(),\n      token = _useParams.token;\n\n  var showSucessNotification = function showSucessNotification(title, message) {\n    var options = {\n      timeOut: 2500,\n      showCloseButton: false,\n      progressBar: false,\n      position: \"top-right\"\n    }; // show notification\n\n    toastr.success(title, message, options);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Reset password\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Enter your new password.\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      password: '',\n      confirmpassword: '',\n      errorForm: ''\n    },\n    validationSchema: Yup.object({\n      password: Yup.string().max(50, 'Must be between 6 to 50 characters').min(6, 'Must be between 6 to 50 characters').required('Required'),\n      confirmpassword: Yup.string().when(\"password\", {\n        is: function is(value) {\n          return value && value.length > 0 ? true : false;\n        },\n        then: Yup.string().oneOf([Yup.ref(\"password\")], \"Both password need to be the same\")\n      }).required('Required')\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n        var setFieldError;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setFieldError = _ref.setFieldError;\n                _context.prev = 1;\n                _context.next = 4;\n                return UserApi.resetPassword(token, values.password);\n\n              case 4:\n                // notification\n                showSucessNotification(\"Reset Password\", \"Reset Password Successfully!\"); // redirect login page\n\n                props.history.push(\"/auth/sign-in\");\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                setFieldError('errorForm', 'There is an error from the server');\n                console.log(_context.t0);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    validateOnChange: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Password\",\n      bsSize: \"lg\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Enter new password\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Confirm Password\",\n      bsSize: \"lg\",\n      type: \"password\",\n      name: \"confirmpassword\",\n      placeholder: \"Enter confirm new password\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"errorForm\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      size: \"lg\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Reset password\"))))));\n  }));\n};\n\nexport default NewPassword;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Lesson_Resource_Registration_Login_CRUD Demo/Demo/15. Delete Group/Demo/Frontend/GroupManagementFrontEnd/src/pages/auth/NewPassword.js"],"names":["React","Button","Card","CardBody","FormGroup","Formik","FastField","Form","ErrorMessage","Yup","ReactstrapInput","UserApi","useParams","toastr","NewPassword","props","token","showSucessNotification","title","message","options","timeOut","showCloseButton","progressBar","position","success","password","confirmpassword","errorForm","object","string","max","min","required","when","is","value","length","then","oneOf","ref","values","setFieldError","resetPassword","history","push","console","log","isSubmitting","display"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  FormGroup\r\n} from \"reactstrap\";\r\nimport { Formik, FastField, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport UserApi from '../../api/UserApi';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toastr } from \"react-redux-toastr\";\r\n\r\nconst NewPassword = (props) => {\r\n\r\n  const { token } = useParams();\r\n\r\n  const showSucessNotification = (title, message) => {\r\n    const options = {\r\n      timeOut: 2500,\r\n      showCloseButton: false,\r\n      progressBar: false,\r\n      position: \"top-right\"\r\n    };\r\n\r\n    // show notification\r\n    toastr.success(title, message, options);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"text-center mt-4\">\r\n        <h1 className=\"h2\">Reset password</h1>\r\n        <p className=\"lead\">Enter your new password.</p>\r\n      </div>\r\n\r\n      <Formik\r\n        initialValues={\r\n          {\r\n            password: '',\r\n            confirmpassword: '',\r\n            errorForm: ''\r\n          }\r\n        }\r\n        validationSchema={\r\n          Yup.object({\r\n            password: Yup.string()\r\n              .max(50, 'Must be between 6 to 50 characters')\r\n              .min(6, 'Must be between 6 to 50 characters')\r\n              .required('Required'),\r\n\r\n            confirmpassword: Yup.string()\r\n              .when(\"password\", {\r\n                is: value => (value && value.length > 0 ? true : false),\r\n                then: Yup.string().oneOf(\r\n                  [Yup.ref(\"password\")],\r\n                  \"Both password need to be the same\"\r\n                )\r\n              })\r\n              .required('Required')\r\n          })\r\n        }\r\n        onSubmit={\r\n          async (values, { setFieldError }) => {\r\n            try {\r\n              // call api\r\n              await UserApi.resetPassword(token, values.password);\r\n\r\n              // notification\r\n              showSucessNotification(\r\n                \"Reset Password\",\r\n                \"Reset Password Successfully!\"\r\n              );\r\n\r\n              // redirect login page\r\n              props.history.push(\"/auth/sign-in\");\r\n\r\n            } catch (error) {\r\n              setFieldError('errorForm', 'There is an error from the server');\r\n              console.log(error);\r\n            }\r\n          }\r\n        }\r\n        validateOnChange={false}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Card>\r\n            <CardBody>\r\n              <div className=\"m-sm-4\">\r\n                <Form>\r\n\r\n                  {/* password */}\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Password\"\r\n                      bsSize=\"lg\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Enter new password\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  {/* confirm password */}\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Confirm Password\"\r\n                      bsSize=\"lg\"\r\n                      type=\"password\"\r\n                      name=\"confirmpassword\"\r\n                      placeholder=\"Enter confirm new password\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <ErrorMessage name=\"errorForm\" component={\"div\"} className=\"invalid-feedback\" style={{ display: \"block\" }} />\r\n\r\n                  <div className=\"text-center mt-3\">\r\n                    <Button type=\"submit\" color=\"primary\" size=\"lg\" disabled={isSubmitting}>\r\n                      Reset password\r\n                  </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default NewPassword;\r\n"]},"metadata":{},"sourceType":"module"}