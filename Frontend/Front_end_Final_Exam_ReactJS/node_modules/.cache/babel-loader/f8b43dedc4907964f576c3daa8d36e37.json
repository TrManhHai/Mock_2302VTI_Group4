{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Lesson_Resource_Registration_Login_CRUD Demo\\\\Demo\\\\15. Delete Group\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Lesson_Resource_Registration_Login_CRUD Demo\\\\Demo\\\\15. Delete Group\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Lesson_Resource_Registration_Login_CRUD Demo\\\\Demo\\\\15. Delete Group\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\src\\\\pages\\\\ui-elements\\\\Modals.js\";\n\nimport React, { useState } from \"react\";\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Container, Modal, ModalBody, ModalFooter, ModalHeader, Row } from \"reactstrap\";\nvar colors = [{\n  name: \"Primary\",\n  value: \"primary\"\n}, {\n  name: \"Success\",\n  value: \"success\"\n}, {\n  name: \"Danger\",\n  value: \"danger\"\n}, {\n  name: \"Warning\",\n  value: \"warning\"\n}];\nvar sizes = [{\n  name: \"Small\",\n  value: \"sm\"\n}, {\n  name: \"Medium\",\n  value: \"md\"\n}, {\n  name: \"Large\",\n  value: \"lg\"\n}];\n\nvar DefaultModal = function DefaultModal() {\n  var initOpenModals = function initOpenModals() {\n    var modals = {};\n    colors.forEach(function (color, index) {\n      modals = Object.assign({}, modals, _defineProperty({}, index, false));\n    });\n    return modals;\n  };\n\n  var _useState = useState(function () {\n    return initOpenModals();\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      openModals = _useState2[0],\n      setOpenModals = _useState2[1];\n\n  var _toggle = function toggle(index) {\n    // Toggle selected element\n    setOpenModals(function (openModals) {\n      return Object.assign({}, openModals, _defineProperty({}, index, !openModals[index]));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    tag: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Default modal\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"card-subtitle text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Default Bootstrap modal.\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"), colors.map(function (color, index) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: color.value,\n      onClick: function onClick() {\n        return _toggle(index);\n      },\n      className: \"mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, color.name), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: openModals[index],\n      toggle: function toggle() {\n        return _toggle(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: function toggle() {\n        return _toggle(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, \"Default modal\"), /*#__PURE__*/React.createElement(ModalBody, {\n      className: \"text-center m-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\")), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: function onClick() {\n        return _toggle(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Close\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      color: color.value,\n      onClick: function onClick() {\n        return _toggle(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Save changes\"))));\n  })));\n};\n\nvar ColoredModal = function ColoredModal() {\n  var initOpenModals = function initOpenModals() {\n    var modals = {};\n    colors.forEach(function (color, index) {\n      modals = Object.assign({}, modals, _defineProperty({}, index, false));\n    });\n    return modals;\n  };\n\n  var _useState3 = useState(function () {\n    return initOpenModals();\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openModals = _useState4[0],\n      setOpenModals = _useState4[1];\n\n  var _toggle2 = function toggle(index) {\n    // Toggle selected element\n    setOpenModals(function (openModals) {\n      return Object.assign({}, openModals, _defineProperty({}, index, !openModals[index]));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    tag: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"Colored modal\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"card-subtitle text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"Colored Bootstrap modal.\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"), colors.map(function (color, index) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: color.value,\n      onClick: function onClick() {\n        return _toggle2(index);\n      },\n      className: \"mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, color.name), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: openModals[index],\n      toggle: function toggle() {\n        return _toggle2(index);\n      },\n      className: \"modal-colored modal-\" + color.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: function toggle() {\n        return _toggle2(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, \"Colored modal\"), /*#__PURE__*/React.createElement(ModalBody, {\n      className: \"text-center m-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\")), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      onClick: function onClick() {\n        return _toggle2(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, \"Close\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      onClick: function onClick() {\n        return _toggle2(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, \"Save changes\"))));\n  })));\n};\n\nvar CenteredModal = function CenteredModal() {\n  var initOpenModals = function initOpenModals() {\n    var modals = {};\n    colors.forEach(function (color, index) {\n      modals = Object.assign({}, modals, _defineProperty({}, index, false));\n    });\n    return modals;\n  };\n\n  var _useState5 = useState(function () {\n    return initOpenModals();\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      openModals = _useState6[0],\n      setOpenModals = _useState6[1];\n\n  var _toggle3 = function toggle(index) {\n    // Toggle selected element\n    setOpenModals(function (openModals) {\n      return Object.assign({}, openModals, _defineProperty({}, index, !openModals[index]));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    tag: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, \"Centered modal\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"card-subtitle text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, \"Vertically centered modal.\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"), colors.map(function (color, index) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: color.value,\n      onClick: function onClick() {\n        return _toggle3(index);\n      },\n      className: \"mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, color.name), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: openModals[index],\n      toggle: function toggle() {\n        return _toggle3(index);\n      },\n      centered: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: function toggle() {\n        return _toggle3(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }, \"Centered modal\"), /*#__PURE__*/React.createElement(ModalBody, {\n      className: \"text-center m-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\")), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: function onClick() {\n        return _toggle3(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, \"Close\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      color: color.value,\n      onClick: function onClick() {\n        return _toggle3(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    }, \"Save changes\"))));\n  })));\n};\n\nvar ModalSizes = function ModalSizes() {\n  var initOpenModals = function initOpenModals() {\n    var modals = {};\n    sizes.forEach(function (color, index) {\n      modals = Object.assign({}, modals, _defineProperty({}, index, false));\n    });\n    return modals;\n  };\n\n  var _useState7 = useState(function () {\n    return initOpenModals();\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      openModals = _useState8[0],\n      setOpenModals = _useState8[1];\n\n  var _toggle4 = function toggle(index) {\n    // Toggle selected element\n    setOpenModals(function (openModals) {\n      return Object.assign({}, openModals, _defineProperty({}, index, !openModals[index]));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    tag: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }\n  }, \"Modal sizes\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"card-subtitle text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, \"These sizes kick in at certain breakpoints to avoid scrollbars on smaller viewports.\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"), sizes.map(function (size, index) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: function onClick() {\n        return _toggle4(index);\n      },\n      className: \"mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, size.name), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: openModals[index],\n      toggle: function toggle() {\n        return _toggle4(index);\n      },\n      size: size.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: function toggle() {\n        return _toggle4(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 15\n      }\n    }, size.name, \" modal\"), /*#__PURE__*/React.createElement(ModalBody, {\n      className: \"text-center m-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }\n    }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\")), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: function onClick() {\n        return _toggle4(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }\n    }, \"Close\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: function onClick() {\n        return _toggle4(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }, \"Save changes\"))));\n  })));\n};\n\nvar Modals = function Modals() {\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"p-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h3 mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 5\n    }\n  }, \"Modals\"), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DefaultModal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ColoredModal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CenteredModal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalSizes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default Modals;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Lesson_Resource_Registration_Login_CRUD Demo/Demo/15. Delete Group/Demo/Frontend/GroupManagementFrontEnd/src/pages/ui-elements/Modals.js"],"names":["React","useState","Button","Card","CardBody","CardHeader","CardTitle","Col","Container","Modal","ModalBody","ModalFooter","ModalHeader","Row","colors","name","value","sizes","DefaultModal","initOpenModals","modals","forEach","color","index","Object","assign","openModals","setOpenModals","toggle","map","ColoredModal","CenteredModal","ModalSizes","size","Modals"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Container,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row\r\n} from \"reactstrap\";\r\n\r\nconst colors = [\r\n  {\r\n    name: \"Primary\",\r\n    value: \"primary\"\r\n  },\r\n  {\r\n    name: \"Success\",\r\n    value: \"success\"\r\n  },\r\n  {\r\n    name: \"Danger\",\r\n    value: \"danger\"\r\n  },\r\n  {\r\n    name: \"Warning\",\r\n    value: \"warning\"\r\n  }\r\n];\r\n\r\nconst sizes = [\r\n  {\r\n    name: \"Small\",\r\n    value: \"sm\"\r\n  },\r\n  {\r\n    name: \"Medium\",\r\n    value: \"md\"\r\n  },\r\n  {\r\n    name: \"Large\",\r\n    value: \"lg\"\r\n  }\r\n];\r\n\r\nconst DefaultModal = () => {\r\n  const initOpenModals = () => {\r\n    let modals = {};\r\n\r\n    colors.forEach((color, index) => {\r\n      modals = Object.assign({}, modals, {[index]: false})\r\n    });\r\n\r\n    return modals;\r\n  };\r\n\r\n  const [openModals, setOpenModals] = useState(() => initOpenModals());\r\n\r\n  const toggle = index => {\r\n    // Toggle selected element\r\n    setOpenModals(openModals => Object.assign({}, openModals, {[index]: !openModals[index]}));\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Default modal</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">Default Bootstrap modal.</h6>\r\n      </CardHeader>\r\n      <CardBody className=\"text-center\">\r\n        <p>\r\n          Use Bootstrap’s JavaScript modal plugin to add dialogs to your site\r\n          for lightboxes, user notifications, or completely custom content.\r\n        </p>\r\n\r\n        {colors.map((color, index) => (\r\n          <React.Fragment key={index}>\r\n            <Button\r\n              color={color.value}\r\n              onClick={() => toggle(index)}\r\n              className=\"mr-1\"\r\n            >\r\n              {color.name}\r\n            </Button>\r\n            <Modal\r\n              isOpen={openModals[index]}\r\n              toggle={() => toggle(index)}\r\n            >\r\n              <ModalHeader toggle={() => toggle(index)}>\r\n                Default modal\r\n              </ModalHeader>\r\n              <ModalBody className=\"text-center m-3\">\r\n                <p className=\"mb-0\">\r\n                  Use Bootstrap’s JavaScript modal plugin to add dialogs to\r\n                  your site for lightboxes, user notifications, or completely\r\n                  custom content.\r\n                </p>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"secondary\" onClick={() => toggle(index)}>\r\n                  Close\r\n                </Button>{\" \"}\r\n                <Button\r\n                  color={color.value}\r\n                  onClick={() => toggle(index)}\r\n                >\r\n                  Save changes\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </React.Fragment>\r\n        ))}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst ColoredModal = () => {\r\n  const initOpenModals = () => {\r\n    let modals = {};\r\n\r\n    colors.forEach((color, index) => {\r\n      modals = Object.assign({}, modals, {[index]: false})\r\n    });\r\n\r\n    return modals;\r\n  };\r\n\r\n  const [openModals, setOpenModals] = useState(() => initOpenModals());\r\n\r\n  const toggle = index => {\r\n    // Toggle selected element\r\n    setOpenModals(openModals => Object.assign({}, openModals, {[index]: !openModals[index]}));\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Colored modal</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">Colored Bootstrap modal.</h6>\r\n      </CardHeader>\r\n      <CardBody className=\"text-center\">\r\n        <p>\r\n          Use Bootstrap’s JavaScript modal plugin to add dialogs to your site\r\n          for lightboxes, user notifications, or completely custom content.\r\n        </p>\r\n\r\n        {colors.map((color, index) => (\r\n          <React.Fragment key={index}>\r\n            <Button\r\n              color={color.value}\r\n              onClick={() => toggle(index)}\r\n              className=\"mr-1\"\r\n            >\r\n              {color.name}\r\n            </Button>\r\n            <Modal\r\n              isOpen={openModals[index]}\r\n              toggle={() => toggle(index)}\r\n              className={\"modal-colored modal-\" + color.value}\r\n            >\r\n              <ModalHeader toggle={() => toggle(index)}>\r\n                Colored modal\r\n              </ModalHeader>\r\n              <ModalBody className=\"text-center m-3\">\r\n                <p className=\"mb-0\">\r\n                  Use Bootstrap’s JavaScript modal plugin to add dialogs to\r\n                  your site for lightboxes, user notifications, or completely\r\n                  custom content.\r\n                </p>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"light\" onClick={() => toggle(index)}>\r\n                  Close\r\n                </Button>{\" \"}\r\n                <Button color=\"light\" onClick={() => toggle(index)}>\r\n                  Save changes\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </React.Fragment>\r\n        ))}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst CenteredModal = () => {\r\n  const initOpenModals = () => {\r\n    let modals = {};\r\n\r\n    colors.forEach((color, index) => {\r\n      modals = Object.assign({}, modals, {[index]: false})\r\n    });\r\n\r\n    return modals;\r\n  };\r\n\r\n  const [openModals, setOpenModals] = useState(() => initOpenModals());\r\n\r\n  const toggle = index => {\r\n    // Toggle selected element\r\n    setOpenModals(openModals => Object.assign({}, openModals, {[index]: !openModals[index]}));\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Centered modal</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Vertically centered modal.\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody className=\"text-center\">\r\n        <p>\r\n          Use Bootstrap’s JavaScript modal plugin to add dialogs to your site\r\n          for lightboxes, user notifications, or completely custom content.\r\n        </p>\r\n\r\n        {colors.map((color, index) => (\r\n          <React.Fragment key={index}>\r\n            <Button\r\n              color={color.value}\r\n              onClick={() => toggle(index)}\r\n              className=\"mr-1\"\r\n            >\r\n              {color.name}\r\n            </Button>\r\n            <Modal\r\n              isOpen={openModals[index]}\r\n              toggle={() => toggle(index)}\r\n              centered\r\n            >\r\n              <ModalHeader toggle={() => toggle(index)}>\r\n                Centered modal\r\n              </ModalHeader>\r\n              <ModalBody className=\"text-center m-3\">\r\n                <p className=\"mb-0\">\r\n                  Use Bootstrap’s JavaScript modal plugin to add dialogs to\r\n                  your site for lightboxes, user notifications, or completely\r\n                  custom content.\r\n                </p>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"secondary\" onClick={() => toggle(index)}>\r\n                  Close\r\n                </Button>{\" \"}\r\n                <Button\r\n                  color={color.value}\r\n                  onClick={() => toggle(index)}\r\n                >\r\n                  Save changes\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </React.Fragment>\r\n        ))}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst ModalSizes = () => {\r\n  const initOpenModals = () => {\r\n    let modals = {};\r\n\r\n    sizes.forEach((color, index) => {\r\n      modals = Object.assign({}, modals, {[index]: false})\r\n    });\r\n\r\n    return modals;\r\n  };\r\n\r\n  const [openModals, setOpenModals] = useState(() => initOpenModals());\r\n\r\n  const toggle = index => {\r\n    // Toggle selected element\r\n    setOpenModals(openModals => Object.assign({}, openModals, {[index]: !openModals[index]}));\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Modal sizes</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          These sizes kick in at certain breakpoints to avoid scrollbars on\r\n          smaller viewports.\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody className=\"text-center\">\r\n        <p>\r\n          Use Bootstrap’s JavaScript modal plugin to add dialogs to your site\r\n          for lightboxes, user notifications, or completely custom content.\r\n        </p>\r\n\r\n        {sizes.map((size, index) => (\r\n          <React.Fragment key={index}>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => toggle(index)}\r\n              className=\"mr-1\"\r\n            >\r\n              {size.name}\r\n            </Button>\r\n            <Modal\r\n              isOpen={openModals[index]}\r\n              toggle={() => toggle(index)}\r\n              size={size.value}\r\n            >\r\n              <ModalHeader toggle={() => toggle(index)}>\r\n                {size.name} modal\r\n              </ModalHeader>\r\n              <ModalBody className=\"text-center m-3\">\r\n                <p className=\"mb-0\">\r\n                  Use Bootstrap’s JavaScript modal plugin to add dialogs to\r\n                  your site for lightboxes, user notifications, or completely\r\n                  custom content.\r\n                </p>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"secondary\" onClick={() => toggle(index)}>\r\n                  Close\r\n                </Button>{\" \"}\r\n                <Button color=\"primary\" onClick={() => toggle(index)}>\r\n                  Save changes\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </React.Fragment>\r\n        ))}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst Modals = () => (\r\n  <Container fluid className=\"p-0\">\r\n    <h1 className=\"h3 mb-3\">Modals</h1>\r\n\r\n    <Row>\r\n      <Col lg=\"6\">\r\n        <DefaultModal />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <ColoredModal />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <CenteredModal />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <ModalSizes />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default Modals;\r\n"]},"metadata":{},"sourceType":"module"}