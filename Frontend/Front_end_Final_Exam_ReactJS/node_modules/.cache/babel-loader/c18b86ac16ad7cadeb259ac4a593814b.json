{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinaExamReactJs\\\\Frontend\\\\Front_end_Final_Exam_ReactJS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinaExamReactJs\\\\Frontend\\\\Front_end_Final_Exam_ReactJS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport * as types from \"../constants\";\nimport GroupApi from '../../api/GroupApi';\n\nvar listGroupAction = function listGroupAction(groups, page, totalElement, sortField, sortType, search, minTotalMember, maxTotalMember) {\n  return {\n    type: types.GET_LIST_GROUP,\n    payload: {\n      groups: groups,\n      // paging\n      page: page,\n      totalElement: totalElement,\n      // sorting\n      sortField: sortField,\n      sortType: sortType,\n      // search\n      search: search,\n      // filter\n      minTotalMember: minTotalMember,\n      maxTotalMember: maxTotalMember\n    }\n  };\n};\n\nexport var getListGroupAction = function getListGroupAction(page, size, sortField, sortType, search, minTotalMember, maxTotalMember) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var json, groups, totalElement;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return GroupApi.getAll(page, size, sortField, sortType, search, minTotalMember, maxTotalMember);\n\n            case 3:\n              json = _context.sent;\n              groups = json.content;\n              totalElement = json.totalElements;\n              dispatch(listGroupAction(groups, page, totalElement, sortField, sortType, search, minTotalMember, maxTotalMember));\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var updateSelectedRowsAction = function updateSelectedRowsAction(selectedRows) {\n  return {\n    type: types.GET_LIST_GROUP_SELECTED_ROWS,\n    payload: selectedRows\n  };\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/FinaExamReactJs/Frontend/Front_end_Final_Exam_ReactJS/src/redux/actions/groupActions.js"],"names":["types","GroupApi","listGroupAction","groups","page","totalElement","sortField","sortType","search","minTotalMember","maxTotalMember","type","GET_LIST_GROUP","payload","getListGroupAction","size","dispatch","getAll","json","content","totalElements","console","log","updateSelectedRowsAction","selectedRows","GET_LIST_GROUP_SELECTED_ROWS"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASC,IAAT,EAAeC,YAAf,EAA6BC,SAA7B,EAAwCC,QAAxC,EAAkDC,MAAlD,EAA0DC,cAA1D,EAA0EC,cAA1E,EAA6F;AACnH,SAAO;AACLC,IAAAA,IAAI,EAAEX,KAAK,CAACY,cADP;AAELC,IAAAA,OAAO,EAAE;AACPV,MAAAA,MAAM,EAANA,MADO;AAEP;AACAC,MAAAA,IAAI,EAAJA,IAHO;AAIPC,MAAAA,YAAY,EAAZA,YAJO;AAKP;AACAC,MAAAA,SAAS,EAATA,SANO;AAOPC,MAAAA,QAAQ,EAARA,QAPO;AAQP;AACAC,MAAAA,MAAM,EAANA,MATO;AAUP;AACAC,MAAAA,cAAc,EAAdA,cAXO;AAYPC,MAAAA,cAAc,EAAdA;AAZO;AAFJ,GAAP;AAiBD,CAlBD;;AAoBA,OAAO,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACV,IAAD,EAAOW,IAAP,EAAaT,SAAb,EAAwBC,QAAxB,EAAkCC,MAAlC,EAA0CC,cAA1C,EAA0DC,cAA1D,EAA6E;AAC7G;AAAA,wEAAO,iBAAMM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEgBf,QAAQ,CAACgB,MAAT,CAAgBb,IAAhB,EAAsBW,IAAtB,EAA4BT,SAA5B,EAAuCC,QAAvC,EAAiDC,MAAjD,EAAyDC,cAAzD,EAAyEC,cAAzE,CAFhB;;AAAA;AAEGQ,cAAAA,IAFH;AAGGf,cAAAA,MAHH,GAGYe,IAAI,CAACC,OAHjB;AAIGd,cAAAA,YAJH,GAIkBa,IAAI,CAACE,aAJvB;AAKHJ,cAAAA,QAAQ,CAACd,eAAe,CAACC,MAAD,EAASC,IAAT,EAAeC,YAAf,EAA6BC,SAA7B,EAAwCC,QAAxC,EAAkDC,MAAlD,EAA0DC,cAA1D,EAA0EC,cAA1E,CAAhB,CAAR;AALG;AAAA;;AAAA;AAAA;AAAA;AAOHW,cAAAA,OAAO,CAACC,GAAR;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAUD,CAXM;AAaP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,YAAD,EAAkB;AACxD,SAAO;AACLb,IAAAA,IAAI,EAAEX,KAAK,CAACyB,4BADP;AAELZ,IAAAA,OAAO,EAAEW;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as types from \"../constants\";\r\nimport GroupApi from '../../api/GroupApi';\r\n\r\nconst listGroupAction = (groups, page, totalElement, sortField, sortType, search, minTotalMember, maxTotalMember) => {\r\n  return {\r\n    type: types.GET_LIST_GROUP,\r\n    payload: {\r\n      groups,\r\n      // paging\r\n      page,\r\n      totalElement,\r\n      // sorting\r\n      sortField,\r\n      sortType,\r\n      // search\r\n      search,\r\n      // filter\r\n      minTotalMember,\r\n      maxTotalMember\r\n    }\r\n  };\r\n}\r\n\r\nexport const getListGroupAction = (page, size, sortField, sortType, search, minTotalMember, maxTotalMember) => {\r\n  return async dispatch => {\r\n    try {\r\n      const json = await GroupApi.getAll(page, size, sortField, sortType, search, minTotalMember, maxTotalMember);\r\n      const groups = json.content;\r\n      const totalElement = json.totalElements;\r\n      dispatch(listGroupAction(groups, page, totalElement, sortField, sortType, search, minTotalMember, maxTotalMember));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateSelectedRowsAction = (selectedRows) => {\r\n  return {\r\n    type: types.GET_LIST_GROUP_SELECTED_ROWS,\r\n    payload: selectedRows\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}