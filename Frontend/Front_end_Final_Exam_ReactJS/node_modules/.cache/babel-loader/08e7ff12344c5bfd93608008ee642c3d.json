{"ast":null,"code":"import { createSelector } from \"@reduxjs/toolkit\";\n/** Selector **/\n\nvar groupSelector = function groupSelector(state) {\n  return state.group;\n};\n\nvar selectListGroupSelector = createSelector(groupSelector, function (state) {\n  return state.groups;\n});\nvar selectPageSelector = createSelector(groupSelector, function (state) {\n  return state.page;\n});\nvar selectSizeSelector = createSelector(groupSelector, function (state) {\n  return state.size;\n});\nvar selectTotalElementSelector = createSelector(groupSelector, function (state) {\n  return state.totalElement;\n});\nvar selectSortFieldSelector = createSelector(groupSelector, function (state) {\n  return state.sortField;\n});\nvar selectSortTypeSelector = createSelector(groupSelector, function (state) {\n  return state.sortType;\n});\nvar selectSearchSelector = createSelector(groupSelector, function (state) {\n  return state.search;\n});\nvar selectMinTotalMemberSelector = createSelector(groupSelector, function (state) {\n  return state.minTotalMember;\n});\nvar selectMaxTotalMemberSelector = createSelector(groupSelector, function (state) {\n  return state.maxTotalMember;\n});\nvar selectSelectedRowsSelector = createSelector(groupSelector, function (state) {\n  return state.selectedRows;\n});\nvar selectLoadingSelector = createSelector(groupSelector, function (state) {\n  return state.isLoading;\n});\n/** function */\n\nexport var selectListGroup = function selectListGroup(state) {\n  return selectListGroupSelector(state);\n};\nexport var selectPage = function selectPage(state) {\n  return selectPageSelector(state);\n};\nexport var selectSize = function selectSize(state) {\n  return selectSizeSelector(state);\n};\nexport var selectTotalElement = function selectTotalElement(state) {\n  return selectTotalElementSelector(state);\n};\nexport var selectSortField = function selectSortField(state) {\n  return selectSortFieldSelector(state);\n};\nexport var selectSortType = function selectSortType(state) {\n  return selectSortTypeSelector(state);\n};\nexport var selectSearch = function selectSearch(state) {\n  return selectSearchSelector(state);\n};\nexport var selectMinTotalMember = function selectMinTotalMember(state) {\n  return selectMinTotalMemberSelector(state);\n};\nexport var selectMaxTotalMember = function selectMaxTotalMember(state) {\n  return selectMaxTotalMemberSelector(state);\n};\nexport var selectSelectedRows = function selectSelectedRows(state) {\n  return selectSelectedRowsSelector(state);\n};\nexport var selectLoading = function selectLoading(state) {\n  return selectLoadingSelector(state);\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Lesson_Resource_Registration_Login_CRUD Demo/Demo/15. Delete Group/Demo/Frontend/GroupManagementFrontEnd/src/redux/selectors/groupSelector.js"],"names":["createSelector","groupSelector","state","group","selectListGroupSelector","groups","selectPageSelector","page","selectSizeSelector","size","selectTotalElementSelector","totalElement","selectSortFieldSelector","sortField","selectSortTypeSelector","sortType","selectSearchSelector","search","selectMinTotalMemberSelector","minTotalMember","selectMaxTotalMemberSelector","maxTotalMember","selectSelectedRowsSelector","selectedRows","selectLoadingSelector","isLoading","selectListGroup","selectPage","selectSize","selectTotalElement","selectSortField","selectSortType","selectSearch","selectMinTotalMember","selectMaxTotalMember","selectSelectedRows","selectLoading"],"mappings":"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","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\n/** Selector **/\r\nconst groupSelector = (state) => state.group;\r\n\r\nconst selectListGroupSelector = createSelector(\r\n    groupSelector,\r\n    state => state.groups);\r\n\r\nconst selectPageSelector = createSelector(\r\n    groupSelector,\r\n    state => state.page);\r\n\r\nconst selectSizeSelector = createSelector(\r\n    groupSelector,\r\n    state => state.size);\r\n\r\nconst selectTotalElementSelector = createSelector(\r\n    groupSelector,\r\n    state => state.totalElement);\r\n\r\nconst selectSortFieldSelector = createSelector(\r\n    groupSelector,\r\n    state => state.sortField);\r\n\r\nconst selectSortTypeSelector = createSelector(\r\n    groupSelector,\r\n    state => state.sortType);\r\n\r\nconst selectSearchSelector = createSelector(\r\n    groupSelector,\r\n    state => state.search);\r\n\r\nconst selectMinTotalMemberSelector = createSelector(\r\n    groupSelector,\r\n    state => state.minTotalMember);\r\n\r\nconst selectMaxTotalMemberSelector = createSelector(\r\n    groupSelector,\r\n    state => state.maxTotalMember);\r\n\r\nconst selectSelectedRowsSelector = createSelector(\r\n    groupSelector,\r\n    state => state.selectedRows);\r\n\r\nconst selectLoadingSelector = createSelector(\r\n    groupSelector,\r\n    state => state.isLoading);\r\n\r\n/** function */\r\nexport const selectListGroup = (state) => {\r\n    return selectListGroupSelector(state);\r\n}\r\n\r\nexport const selectPage = (state) => {\r\n    return selectPageSelector(state);\r\n}\r\n\r\nexport const selectSize = (state) => {\r\n    return selectSizeSelector(state);\r\n}\r\n\r\nexport const selectTotalElement = (state) => {\r\n    return selectTotalElementSelector(state);\r\n}\r\n\r\nexport const selectSortField = (state) => {\r\n    return selectSortFieldSelector(state);\r\n}\r\n\r\nexport const selectSortType = (state) => {\r\n    return selectSortTypeSelector(state);\r\n}\r\n\r\nexport const selectSearch = (state) => {\r\n    return selectSearchSelector(state);\r\n}\r\n\r\nexport const selectMinTotalMember = (state) => {\r\n    return selectMinTotalMemberSelector(state);\r\n}\r\n\r\nexport const selectMaxTotalMember = (state) => {\r\n    return selectMaxTotalMemberSelector(state);\r\n}\r\n\r\nexport const selectSelectedRows = (state) => {\r\n    return selectSelectedRowsSelector(state);\r\n}\r\n\r\nexport const selectLoading = (state) => {\r\n    return selectLoadingSelector(state);\r\n}"]},"metadata":{},"sourceType":"module"}