{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Lesson_Resource_Registration_Login_CRUD Demo\\\\Demo\\\\15. Delete Group\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Lesson_Resource_Registration_Login_CRUD Demo\\\\Demo\\\\15. Delete Group\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Lesson_Resource_Registration_Login_CRUD Demo\\\\Demo\\\\15. Delete Group\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Lesson_Resource_Registration_Login_CRUD Demo\\\\Demo\\\\15. Delete Group\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\src\\\\pages\\\\auth\\\\ResetPassword.js\";\n\nimport React from \"react\";\nimport { Button, Card, CardBody, FormGroup, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport { Formik, FastField, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport UserApi from '../../api/UserApi';\nimport { useState } from \"react\";\n\nvar ResetPassword = function ResetPassword(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpenModal = _useState2[0],\n      setOpenModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDisabledResendEmailButton = _useState6[0],\n      setDisabledResendEmailButton = _useState6[1];\n\n  var handleCloseModel = function handleCloseModel() {\n    // open model\n    setOpenModal(false); // redirect login page\n\n    props.history.push(\"/auth/sign-in\");\n  };\n\n  var resendEmailToResetPassword = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDisabledResendEmailButton(true); // call api\n\n              _context.next = 3;\n              return UserApi.resendEmailToResetPassword(email);\n\n            case 3:\n              setDisabledResendEmailButton(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function resendEmailToResetPassword() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Reset password\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Enter your email to reset your password.\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      errorForm: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().required('Required').max(50, 'Must be between 6 to 50 characters').min(6, 'Must be between 6 to 50 characters').email('Invalid email address').test('checkEmailExists', 'This email is not exists.', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email) {\n          var isExists;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return UserApi.existsByEmail(email);\n\n                case 2:\n                  isExists = _context2.sent;\n                  return _context2.abrupt(\"return\", isExists);\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }())\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values, _ref3) {\n        var setFieldError;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                setFieldError = _ref3.setFieldError;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return UserApi.requestResetPassword(values.email);\n\n              case 4:\n                // open model \n                setOpenModal(true);\n                setEmail(values.email);\n                _context3.next = 12;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](1);\n                setFieldError('errorForm', 'There is an error from the server');\n                console.log(_context3.t0);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 8]]);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    validateOnChange: false,\n    validateOnBlur: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, function (_ref5) {\n    var isSubmitting = _ref5.isSubmitting;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Email\",\n      bsSize: \"lg\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Enter your email\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"errorForm\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      size: \"lg\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, \"Reset password\"))))));\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"You need to confirm reset password\"), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"m-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"We have sent an email to \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 38\n    }\n  }, email), \".\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Please check your email to reset password.\")), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: resendEmailToResetPassword,\n    style: {\n      marginLeft: 10\n    },\n    disabled: isDisabledResendEmailButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Resend\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    onClick: handleCloseModel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Lesson_Resource_Registration_Login_CRUD Demo/Demo/15. Delete Group/Demo/Frontend/GroupManagementFrontEnd/src/pages/auth/ResetPassword.js"],"names":["React","Button","Card","CardBody","FormGroup","Modal","ModalBody","ModalFooter","ModalHeader","Formik","FastField","Form","ErrorMessage","Yup","ReactstrapInput","UserApi","useState","ResetPassword","props","isOpenModal","setOpenModal","email","setEmail","isDisabledResendEmailButton","setDisabledResendEmailButton","handleCloseModel","history","push","resendEmailToResetPassword","errorForm","object","string","required","max","min","test","existsByEmail","isExists","values","setFieldError","requestResetPassword","console","log","isSubmitting","display","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader\r\n} from \"reactstrap\";\r\nimport { Formik, FastField, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport UserApi from '../../api/UserApi';\r\nimport { useState } from \"react\";\r\n\r\nconst ResetPassword = (props) => {\r\n\r\n  const [isOpenModal, setOpenModal] = useState(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isDisabledResendEmailButton, setDisabledResendEmailButton] = useState(false);\r\n\r\n  const handleCloseModel = () => {\r\n    // open model\r\n    setOpenModal(false);\r\n    // redirect login page\r\n    props.history.push(\"/auth/sign-in\");\r\n  }\r\n\r\n  const resendEmailToResetPassword = async () => {\r\n    setDisabledResendEmailButton(true);\r\n    // call api\r\n    await UserApi.resendEmailToResetPassword(email);\r\n    setDisabledResendEmailButton(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"text-center mt-4\">\r\n        <h1 className=\"h2\">Reset password</h1>\r\n        <p className=\"lead\">Enter your email to reset your password.</p>\r\n      </div>\r\n\r\n      <Formik\r\n        initialValues={\r\n          {\r\n            email: '',\r\n            errorForm: ''\r\n          }\r\n        }\r\n        validationSchema={\r\n          Yup.object({\r\n            email: Yup.string()\r\n              .required('Required')\r\n              .max(50, 'Must be between 6 to 50 characters')\r\n              .min(6, 'Must be between 6 to 50 characters')\r\n              .email('Invalid email address')\r\n              .test('checkEmailExists', 'This email is not exists.', async email => {\r\n                // call api\r\n                const isExists = await UserApi.existsByEmail(email);\r\n                return isExists;\r\n              })\r\n          })\r\n        }\r\n        onSubmit={\r\n          async (values, { setFieldError }) => {\r\n            try {\r\n              // call api\r\n              await UserApi.requestResetPassword(values.email);\r\n\r\n              // open model \r\n              setOpenModal(true);\r\n              setEmail(values.email);\r\n\r\n            } catch (error) {\r\n              setFieldError('errorForm', 'There is an error from the server');\r\n              console.log(error);\r\n            }\r\n          }\r\n        }\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Card>\r\n            <CardBody>\r\n              <div className=\"m-sm-4\">\r\n                <Form>\r\n\r\n                  {/* email */}\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Email\"\r\n                      bsSize=\"lg\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter your email\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <ErrorMessage name=\"errorForm\" component={\"div\"} className=\"invalid-feedback\" style={{ display: \"block\" }} />\r\n\r\n                  <div className=\"text-center mt-3\">\r\n                    <Button type=\"submit\" color=\"primary\" size=\"lg\" disabled={isSubmitting}>\r\n                      Reset password\r\n                  </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n\r\n      <Modal\r\n        isOpen={isOpenModal}\r\n      >\r\n        {/* header */}\r\n        <ModalHeader>\r\n          You need to confirm reset password\r\n        </ModalHeader>\r\n\r\n        {/* body */}\r\n        <ModalBody className=\"m-3\">\r\n          <p>\r\n            We have sent an email to <b>{email}</b>.\r\n          </p>\r\n          <p>\r\n            Please check your email to reset password.\r\n          </p>\r\n        </ModalBody>\r\n\r\n        {/* footer */}\r\n        <ModalFooter>\r\n          {/* resend */}\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={resendEmailToResetPassword}\r\n            style={{ marginLeft: 10 }}\r\n            disabled={isDisabledResendEmailButton}\r\n          >\r\n            Resend\r\n          </Button>\r\n\r\n          {/* login */}\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            onClick={handleCloseModel}\r\n          >\r\n            Login\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}