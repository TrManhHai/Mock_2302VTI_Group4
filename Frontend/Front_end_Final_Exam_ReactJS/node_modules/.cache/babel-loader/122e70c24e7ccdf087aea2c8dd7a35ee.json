{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Lesson_Resource_Registration_Login_CRUD Demo\\\\Demo\\\\15. Delete Group\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Lesson_Resource_Registration_Login_CRUD Demo\\\\Demo\\\\15. Delete Group\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Lesson_Resource_Registration_Login_CRUD Demo\\\\Demo\\\\15. Delete Group\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\src\\\\components\\\\Sidebar.js\";\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { Badge, Collapse } from \"reactstrap\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Box } from \"react-feather\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport routes from \"../routes/index\";\nimport avatar from \"../assets/img/avatars/avatar.jpg\";\nimport { selectFullname } from \"../redux/selectors/userLoginInfoSelector\";\n\nvar initOpenRoutes = function initOpenRoutes(location) {\n  /* Open collapse element that matches current url */\n  var pathName = location.pathname;\n  var _routes = {};\n  routes.forEach(function (route, index) {\n    var isActive = pathName.indexOf(route.path) === 0;\n    var isOpen = route.open;\n    var isHome = route.containsHome && pathName === \"/\" ? true : false;\n    _routes = Object.assign({}, _routes, _defineProperty({}, index, isActive || isOpen || isHome));\n  });\n  return _routes;\n};\n\nvar SidebarCategory = withRouter(function (_ref) {\n  var name = _ref.name,\n      badgeColor = _ref.badgeColor,\n      badgeText = _ref.badgeText,\n      Icon = _ref.icon,\n      isOpen = _ref.isOpen,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      location = _ref.location,\n      to = _ref.to;\n\n  var getSidebarItemClass = function getSidebarItemClass(path) {\n    return location.pathname.indexOf(path) !== -1 || location.pathname === \"/\" && path === \"/dashboard\" ? \"active\" : \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"sidebar-item \" + getSidebarItemClass(to),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-toggle\": \"collapse\",\n    className: \"sidebar-link \" + (!isOpen ? \"collapsed\" : \"\"),\n    onClick: onClick,\n    \"aria-expanded\": isOpen ? \"true\" : \"false\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    size: 18,\n    className: \"align-middle mr-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"align-middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, name), badgeColor && badgeText ? /*#__PURE__*/React.createElement(Badge, {\n    color: badgeColor,\n    size: 18,\n    className: \"sidebar-badge\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, badgeText) : null), /*#__PURE__*/React.createElement(Collapse, {\n    isOpen: isOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"item\",\n    className: \"sidebar-dropdown list-unstyled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, children)));\n});\nvar SidebarItem = withRouter(function (_ref2) {\n  var name = _ref2.name,\n      badgeColor = _ref2.badgeColor,\n      badgeText = _ref2.badgeText,\n      Icon = _ref2.icon,\n      location = _ref2.location,\n      to = _ref2.to;\n\n  var getSidebarItemClass = function getSidebarItemClass(path) {\n    return location.pathname === path ? \"active\" : \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"sidebar-item \" + getSidebarItemClass(to),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: to,\n    className: \"sidebar-link\",\n    activeClassName: \"active\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, Icon ? /*#__PURE__*/React.createElement(Icon, {\n    size: 18,\n    className: \"align-middle mr-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }) : null, name, badgeColor && badgeText ? /*#__PURE__*/React.createElement(Badge, {\n    color: badgeColor,\n    size: 18,\n    className: \"sidebar-badge\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, badgeText) : null));\n});\n\nvar Sidebar = function Sidebar(props) {\n  var _useState = useState(function () {\n    return initOpenRoutes(props.location);\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      openRoutes = _useState2[0],\n      setOpenRoutes = _useState2[1];\n\n  var toggle = function toggle(index) {\n    // Collapse all elements\n    Object.keys(openRoutes).forEach(function (item) {\n      return openRoutes[index] || setOpenRoutes(function (openRoutes) {\n        return Object.assign({}, openRoutes, _defineProperty({}, item, false));\n      });\n    }); // Toggle selected element\n\n    setOpenRoutes(function (openRoutes) {\n      return Object.assign({}, openRoutes, _defineProperty({}, index, !openRoutes[index]));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"sidebar\" + (!props.sidebar.isOpen ? \" toggled\" : \"\") + (props.sidebar.isSticky ? \" sidebar-sticky\" : \"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"sidebar-brand\",\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: \"align-middle text-primary\",\n    size: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"align-middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"AppStack\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"sidebar-nav\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, routes.map(function (category, index) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, category.header ? /*#__PURE__*/React.createElement(\"li\", {\n      className: \"sidebar-header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, category.header) : null, category.children ? /*#__PURE__*/React.createElement(SidebarCategory, {\n      name: category.name,\n      badgeColor: category.badgeColor,\n      badgeText: category.badgeText,\n      icon: category.icon,\n      to: category.path,\n      isOpen: openRoutes[index],\n      onClick: function onClick() {\n        return toggle(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, category.children.map(function (route, index) {\n      return /*#__PURE__*/React.createElement(SidebarItem, {\n        key: index,\n        name: route.name,\n        to: route.path,\n        badgeColor: route.badgeColor,\n        badgeText: route.badgeText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      });\n    })) : /*#__PURE__*/React.createElement(SidebarItem, {\n      name: category.name,\n      to: category.path,\n      icon: category.icon,\n      badgeColor: category.badgeColor,\n      badgeText: category.badgeText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }));\n  })), !props.layout.isBoxed && !props.sidebar.isSticky ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-bottom d-none d-lg-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"rounded-circle mr-3\",\n    src: avatar,\n    alt: \"Chris Wood\",\n    width: \"40\",\n    height: \"40\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }, props.fullname), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCircle,\n    className: \"text-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }), \" \", \"Online\")))) : null)));\n};\n\nvar mapGlobalStateToProps = function mapGlobalStateToProps(state) {\n  return {\n    sidebar: state.sidebar,\n    layout: state.layout,\n    fullname: selectFullname(state)\n  };\n};\n\nexport default withRouter(connect(mapGlobalStateToProps)(Sidebar));","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Lesson_Resource_Registration_Login_CRUD Demo/Demo/15. Delete Group/Demo/Frontend/GroupManagementFrontEnd/src/components/Sidebar.js"],"names":["React","useState","connect","NavLink","withRouter","Badge","Collapse","PerfectScrollbar","Box","FontAwesomeIcon","faCircle","routes","avatar","selectFullname","initOpenRoutes","location","pathName","pathname","_routes","forEach","route","index","isActive","indexOf","path","isOpen","open","isHome","containsHome","Object","assign","SidebarCategory","name","badgeColor","badgeText","Icon","icon","children","onClick","to","getSidebarItemClass","SidebarItem","Sidebar","props","openRoutes","setOpenRoutes","toggle","keys","item","sidebar","isSticky","map","category","header","layout","isBoxed","fullname","mapGlobalStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nimport { Badge, Collapse } from \"reactstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nimport { Box } from \"react-feather\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport routes from \"../routes/index\";\r\nimport avatar from \"../assets/img/avatars/avatar.jpg\";\r\nimport { selectFullname } from \"../redux/selectors/userLoginInfoSelector\";\r\n\r\nconst initOpenRoutes = (location) => {\r\n  /* Open collapse element that matches current url */\r\n  const pathName = location.pathname;\r\n\r\n  let _routes = {};\r\n\r\n  routes.forEach((route, index) => {\r\n    const isActive = pathName.indexOf(route.path) === 0;\r\n    const isOpen = route.open;\r\n    const isHome = route.containsHome && pathName === \"/\" ? true : false;\r\n\r\n    _routes = Object.assign({}, _routes, { [index]: isActive || isOpen || isHome })\r\n  });\r\n\r\n  return _routes;\r\n};\r\n\r\nconst SidebarCategory = withRouter(\r\n  ({\r\n    name,\r\n    badgeColor,\r\n    badgeText,\r\n    icon: Icon,\r\n    isOpen,\r\n    children,\r\n    onClick,\r\n    location,\r\n    to\r\n  }) => {\r\n    const getSidebarItemClass = path => {\r\n      return location.pathname.indexOf(path) !== -1 ||\r\n        (location.pathname === \"/\" && path === \"/dashboard\")\r\n        ? \"active\"\r\n        : \"\";\r\n    };\r\n\r\n    return (\r\n      <li className={\"sidebar-item \" + getSidebarItemClass(to)}>\r\n        <span\r\n          data-toggle=\"collapse\"\r\n          className={\"sidebar-link \" + (!isOpen ? \"collapsed\" : \"\")}\r\n          onClick={onClick}\r\n          aria-expanded={isOpen ? \"true\" : \"false\"}\r\n        >\r\n          <Icon size={18} className=\"align-middle mr-3\" />\r\n          <span className=\"align-middle\">{name}</span>\r\n          {badgeColor && badgeText ? (\r\n            <Badge color={badgeColor} size={18} className=\"sidebar-badge\">\r\n              {badgeText}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n        <Collapse isOpen={isOpen}>\r\n          <ul id=\"item\" className={\"sidebar-dropdown list-unstyled\"}>\r\n            {children}\r\n          </ul>\r\n        </Collapse>\r\n      </li>\r\n    );\r\n  }\r\n);\r\n\r\nconst SidebarItem = withRouter(\r\n  ({ name, badgeColor, badgeText, icon: Icon, location, to }) => {\r\n    const getSidebarItemClass = path => {\r\n      return location.pathname === path ? \"active\" : \"\";\r\n    };\r\n\r\n    return (\r\n      <li className={\"sidebar-item \" + getSidebarItemClass(to)}>\r\n        <NavLink to={to} className=\"sidebar-link\" activeClassName=\"active\">\r\n          {Icon ? <Icon size={18} className=\"align-middle mr-3\" /> : null}\r\n          {name}\r\n          {badgeColor && badgeText ? (\r\n            <Badge color={badgeColor} size={18} className=\"sidebar-badge\">\r\n              {badgeText}\r\n            </Badge>\r\n          ) : null}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n  }\r\n);\r\n\r\nconst Sidebar = (props) => {\r\n  const [openRoutes, setOpenRoutes] = useState(() => initOpenRoutes(props.location));\r\n\r\n  const toggle = index => {\r\n    // Collapse all elements\r\n    Object.keys(openRoutes).forEach(\r\n      item => openRoutes[index] || setOpenRoutes(openRoutes => Object.assign({}, openRoutes, { [item]: false }))\r\n    )\r\n\r\n    // Toggle selected element\r\n    setOpenRoutes(openRoutes => Object.assign({}, openRoutes, { [index]: !openRoutes[index] }));\r\n  }\r\n\r\n  return (\r\n    <nav\r\n      className={\r\n        \"sidebar\" +\r\n        (!props.sidebar.isOpen ? \" toggled\" : \"\") +\r\n        (props.sidebar.isSticky ? \" sidebar-sticky\" : \"\")\r\n      }\r\n    >\r\n      <div className=\"sidebar-content\">\r\n        <PerfectScrollbar>\r\n          <a className=\"sidebar-brand\" href=\"/\">\r\n            <Box className=\"align-middle text-primary\" size={24} />{\" \"}\r\n            <span className=\"align-middle\">AppStack</span>\r\n          </a>\r\n\r\n          <ul className=\"sidebar-nav\">\r\n            {routes.map((category, index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  {category.header ? (\r\n                    <li className=\"sidebar-header\">{category.header}</li>\r\n                  ) : null}\r\n\r\n                  {category.children ? (\r\n                    <SidebarCategory\r\n                      name={category.name}\r\n                      badgeColor={category.badgeColor}\r\n                      badgeText={category.badgeText}\r\n                      icon={category.icon}\r\n                      to={category.path}\r\n                      isOpen={openRoutes[index]}\r\n                      onClick={() => toggle(index)}\r\n                    >\r\n                      {category.children.map((route, index) => (\r\n                        <SidebarItem\r\n                          key={index}\r\n                          name={route.name}\r\n                          to={route.path}\r\n                          badgeColor={route.badgeColor}\r\n                          badgeText={route.badgeText}\r\n                        />\r\n                      ))}\r\n                    </SidebarCategory>\r\n                  ) : (\r\n                      <SidebarItem\r\n                        name={category.name}\r\n                        to={category.path}\r\n                        icon={category.icon}\r\n                        badgeColor={category.badgeColor}\r\n                        badgeText={category.badgeText}\r\n                      />\r\n                    )}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </ul>\r\n\r\n          {!props.layout.isBoxed && !props.sidebar.isSticky ? (\r\n            <div className=\"sidebar-bottom d-none d-lg-block\">\r\n              <div className=\"media\">\r\n                <img\r\n                  className=\"rounded-circle mr-3\"\r\n                  src={avatar}\r\n                  alt=\"Chris Wood\"\r\n                  width=\"40\"\r\n                  height=\"40\"\r\n                />\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"mb-1\">{props.fullname}</h5>\r\n                  <div>\r\n                    <FontAwesomeIcon\r\n                      icon={faCircle}\r\n                      className=\"text-success\"\r\n                    />{\" \"}\r\n                    Online\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </PerfectScrollbar>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapGlobalStateToProps = state => {\r\n  return {\r\n    sidebar: state.sidebar,\r\n    layout: state.layout,\r\n    fullname: selectFullname(state)\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapGlobalStateToProps)(Sidebar));\r\n"]},"metadata":{},"sourceType":"module"}