{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinaExamReactJs\\\\Frontend\\\\Front_end_Final_Exam_ReactJS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinaExamReactJs\\\\Frontend\\\\Front_end_Final_Exam_ReactJS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinaExamReactJs\\\\Frontend\\\\Front_end_Final_Exam_ReactJS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinaExamReactJs\\\\Frontend\\\\Front_end_Final_Exam_ReactJS\\\\src\\\\pages\\\\auth\\\\SignUp.js\";\n\nimport React from \"react\";\nimport { Button, Card, CardBody, FormGroup, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport { Formik, FastField, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport UserApi from '../../api/UserApi';\nimport { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nvar SignUp = function SignUp(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpenModal = _useState2[0],\n      setOpenModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDisabledResendEmailButton = _useState6[0],\n      setDisabledResendEmailButton = _useState6[1];\n\n  var handleCloseModel = function handleCloseModel() {\n    // open model\n    setOpenModal(false); // redirect login page\n\n    props.history.push(\"/auth/sign-in\");\n  };\n\n  var resendEmailToActiveAccount = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDisabledResendEmailButton(true); // call api\n\n              _context.next = 3;\n              return UserApi.resendEmailToActiveAccount(email);\n\n            case 3:\n              setDisabledResendEmailButton(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function resendEmailToActiveAccount() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Get started\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Create account to experience the course at \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 54\n    }\n  }, \"VTI Academy\"), \".\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      username: '',\n      email: '',\n      password: '',\n      confirmpassword: '',\n      errorForm: ''\n    },\n    validationSchema: Yup.object({\n      firstname: Yup.string().max(50, 'Must be less than 50 characters or equal').required('Required'),\n      lastname: Yup.string().max(50, 'Must be less than 50 characters or equal').required('Required'),\n      username: Yup.string().required('Required').max(50, 'Must be between 6 to 50 characters').min(6, 'Must be between 6 to 50 characters').test('checkUniqueUsername', 'This username is already registered.', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(username) {\n          var isExists;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return UserApi.existsByUsername(username);\n\n                case 2:\n                  isExists = _context2.sent;\n                  return _context2.abrupt(\"return\", !isExists);\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }()),\n      email: Yup.string().required('Required').max(50, 'Must be between 6 to 50 characters').min(6, 'Must be between 6 to 50 characters').email('Invalid email address').test('checkUniqueEmail', 'This email is already registered.', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email) {\n          var isExists;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return UserApi.existsByEmail(email);\n\n                case 2:\n                  isExists = _context3.sent;\n                  return _context3.abrupt(\"return\", !isExists);\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }()),\n      password: Yup.string().max(50, 'Must be between 6 to 50 characters').min(6, 'Must be between 6 to 50 characters').required('Required'),\n      confirmpassword: Yup.string().when(\"password\", {\n        is: function is(value) {\n          return value && value.length > 0 ? true : false;\n        },\n        then: Yup.string().oneOf([Yup.ref(\"password\")], \"Both password need to be the same\")\n      }).required('Required')\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(values, _ref4) {\n        var setFieldError;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                setFieldError = _ref4.setFieldError;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return UserApi.create(values.username, values.email, values.password, values.firstname, values.lastname);\n\n              case 4:\n                // open model \n                setOpenModal(true);\n                setEmail(values.email);\n                _context4.next = 12;\n                break;\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](1);\n                setFieldError('errorForm', 'There is an error from the server');\n                console.log(_context4.t0);\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 8]]);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }(),\n    validateOnChange: false,\n    validateOnBlur: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, function (_ref6) {\n    var isSubmitting = _ref6.isSubmitting;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"First Name\",\n      bsSize: \"lg\",\n      type: \"text\",\n      name: \"firstname\",\n      placeholder: \"Enter your first name\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Last Name\",\n      bsSize: \"lg\",\n      type: \"text\",\n      name: \"lastname\",\n      placeholder: \"Enter your last name\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Username\",\n      bsSize: \"lg\",\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Enter your username\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Email\",\n      bsSize: \"lg\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Enter your email\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Password\",\n      bsSize: \"lg\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Enter password\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Confirm Password\",\n      bsSize: \"lg\",\n      type: \"password\",\n      name: \"confirmpassword\",\n      placeholder: \"Enter confirm password\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"errorForm\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      size: \"lg\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, \"Sign up\"))))));\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, \"You need to confirm your account\"), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"m-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, \"We have sent an email to \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 38\n    }\n  }, email), \".\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, \"Please check your email to active account.\")), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: resendEmailToActiveAccount,\n    style: {\n      marginLeft: 10\n    },\n    disabled: isDisabledResendEmailButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, \"Resend\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleCloseModel,\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n};\n\nexport default withRouter(SignUp);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/FinaExamReactJs/Frontend/Front_end_Final_Exam_ReactJS/src/pages/auth/SignUp.js"],"names":["React","Button","Card","CardBody","FormGroup","Modal","ModalBody","ModalFooter","ModalHeader","Formik","FastField","Form","ErrorMessage","Yup","ReactstrapInput","UserApi","useState","withRouter","SignUp","props","isOpenModal","setOpenModal","email","setEmail","isDisabledResendEmailButton","setDisabledResendEmailButton","handleCloseModel","history","push","resendEmailToActiveAccount","firstname","lastname","username","password","confirmpassword","errorForm","object","string","max","required","min","test","existsByUsername","isExists","existsByEmail","when","is","value","length","then","oneOf","ref","values","setFieldError","create","console","log","isSubmitting","display","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader\r\n} from \"reactstrap\";\r\nimport { Formik, FastField, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport UserApi from '../../api/UserApi';\r\nimport { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SignUp = (props) => {\r\n\r\n  const [isOpenModal, setOpenModal] = useState(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isDisabledResendEmailButton, setDisabledResendEmailButton] = useState(false);\r\n\r\n  const handleCloseModel = () => {\r\n    // open model\r\n    setOpenModal(false);\r\n    // redirect login page\r\n    props.history.push(\"/auth/sign-in\");\r\n  }\r\n\r\n  const resendEmailToActiveAccount = async () => {\r\n    setDisabledResendEmailButton(true);\r\n    // call api\r\n    await UserApi.resendEmailToActiveAccount(email);\r\n    setDisabledResendEmailButton(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-center mt-4\">\r\n        <h1 className=\"h2\">Get started</h1>\r\n        <p className=\"lead\">\r\n          Create account to experience the course at <b>VTI Academy</b>.\r\n        </p>\r\n      </div>\r\n\r\n      <Formik\r\n        initialValues={\r\n          {\r\n            firstname: '',\r\n            lastname: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmpassword: '',\r\n            errorForm: ''\r\n          }\r\n        }\r\n        validationSchema={\r\n          Yup.object({\r\n            firstname: Yup.string()\r\n              .max(50, 'Must be less than 50 characters or equal')\r\n              .required('Required'),\r\n\r\n            lastname: Yup.string()\r\n              .max(50, 'Must be less than 50 characters or equal')\r\n              .required('Required'),\r\n\r\n            username: Yup.string()\r\n              .required('Required')\r\n              .max(50, 'Must be between 6 to 50 characters')\r\n              .min(6, 'Must be between 6 to 50 characters')\r\n              .test('checkUniqueUsername', 'This username is already registered.', async username => {\r\n                // call api\r\n                const isExists = await UserApi.existsByUsername(username);\r\n                return !isExists;\r\n              }),\r\n\r\n            email: Yup.string()\r\n              .required('Required')\r\n              .max(50, 'Must be between 6 to 50 characters')\r\n              .min(6, 'Must be between 6 to 50 characters')\r\n              .email('Invalid email address')\r\n              .test('checkUniqueEmail', 'This email is already registered.', async email => {\r\n                // call api\r\n                const isExists = await UserApi.existsByEmail(email);\r\n                return !isExists;\r\n              }),\r\n\r\n            password: Yup.string()\r\n              .max(50, 'Must be between 6 to 50 characters')\r\n              .min(6, 'Must be between 6 to 50 characters')\r\n              .required('Required'),\r\n\r\n            confirmpassword: Yup.string()\r\n              .when(\"password\", {\r\n                is: value => (value && value.length > 0 ? true : false),\r\n                then: Yup.string().oneOf(\r\n                  [Yup.ref(\"password\")],\r\n                  \"Both password need to be the same\"\r\n                )\r\n              })\r\n              .required('Required')\r\n          })\r\n        }\r\n        onSubmit={\r\n          async (values, { setFieldError }) => {\r\n            try {\r\n              // call api\r\n              await UserApi.create(\r\n                values.username,\r\n                values.email,\r\n                values.password,\r\n                values.firstname,\r\n                values.lastname);\r\n              // open model \r\n              setOpenModal(true);\r\n              setEmail(values.email);\r\n            } catch (error) {\r\n              setFieldError('errorForm', 'There is an error from the server');\r\n              console.log(error);\r\n            }\r\n          }\r\n        }\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Card>\r\n            <CardBody>\r\n              <div className=\"m-sm-4\">\r\n                <Form>\r\n                  {/* Firstname */}\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"First Name\"\r\n                      bsSize=\"lg\"\r\n                      type=\"text\"\r\n                      name=\"firstname\"\r\n                      placeholder=\"Enter your first name\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  {/* Lastname */}\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Last Name\"\r\n                      bsSize=\"lg\"\r\n                      type=\"text\"\r\n                      name=\"lastname\"\r\n                      placeholder=\"Enter your last name\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  {/* username */}\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Username\"\r\n                      bsSize=\"lg\"\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      placeholder=\"Enter your username\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  {/* email */}\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Email\"\r\n                      bsSize=\"lg\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter your email\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  {/* password */}\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Password\"\r\n                      bsSize=\"lg\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Enter password\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  {/* confirm password */}\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Confirm Password\"\r\n                      bsSize=\"lg\"\r\n                      type=\"password\"\r\n                      name=\"confirmpassword\"\r\n                      placeholder=\"Enter confirm password\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <ErrorMessage name=\"errorForm\" component={\"div\"} className=\"invalid-feedback\" style={{ display: \"block\" }} />\r\n\r\n                  {/* submit */}\r\n                  <div className=\"text-center mt-3\">\r\n                    <Button type=\"submit\" color=\"primary\" size=\"lg\" disabled={isSubmitting}>\r\n                      Sign up\r\n                    </Button>\r\n                  </div>\r\n\r\n                </Form>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n\r\n      <Modal\r\n        isOpen={isOpenModal}\r\n      >\r\n        {/* header */}\r\n        <ModalHeader>\r\n          You need to confirm your account\r\n        </ModalHeader>\r\n\r\n        {/* body */}\r\n        <ModalBody className=\"m-3\">\r\n          <p>\r\n            We have sent an email to <b>{email}</b>.\r\n          </p>\r\n          <p>\r\n            Please check your email to active account.\r\n          </p>\r\n        </ModalBody>\r\n\r\n        {/* footer */}\r\n        <ModalFooter>\r\n          {/* resend */}\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={resendEmailToActiveAccount}\r\n            style={{ marginLeft: 10 }}\r\n            disabled={isDisabledResendEmailButton}\r\n          >\r\n            Resend\r\n          </Button>\r\n\r\n          {/* login */}\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={handleCloseModel}\r\n            type=\"submit\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  )\r\n\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}