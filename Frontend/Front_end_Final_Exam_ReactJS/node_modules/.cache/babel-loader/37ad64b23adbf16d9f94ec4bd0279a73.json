{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinaExamReactJs\\\\Frontend\\\\Front_end_Final_Exam_ReactJS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinaExamReactJs\\\\Frontend\\\\Front_end_Final_Exam_ReactJS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport Storage from '../Storage/Storage';\nvar axiosClient = axios.create({\n  baseURL: \"http://localhost:8080/api/v1\" //timeout: 5000, // default is `0` (no timeout)\n  // responseType: 'json'\n\n});\naxiosClient.interceptors.request.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(config) {\n    var token;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Handle token here ...\n            // attach token to header if exists\n            token = Storage.getToken();\n\n            if (token !== null && token !== undefined) {\n              config.headers.Authorization = \"Bearer \".concat(token);\n            }\n\n            return _context.abrupt(\"return\", config);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\naxiosClient.interceptors.response.use(function (response) {\n  if (response && response.data !== undefined) {\n    // only get data\n    return response.data;\n  }\n\n  return response;\n}, function (error) {\n  if (error.response) {\n    throw error.response;\n  }\n\n  if (error.request) {\n    throw error.request;\n  } // Handle errors\n\n\n  throw error;\n});\nexport default axiosClient;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/FinaExamReactJs/Frontend/Front_end_Final_Exam_ReactJS/src/api/Api.js"],"names":["axios","Storage","axiosClient","create","baseURL","interceptors","request","use","config","token","getToken","undefined","headers","Authorization","response","data","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAMC,WAAW,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC7BC,EAAAA,OAAO,gCADsB,CAE7B;AACA;;AAH6B,CAAb,CAApB;AAMAF,WAAW,CAACG,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC;AAAA,sEAAqC,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjC;AACA;AACMC,YAAAA,KAH2B,GAGnBR,OAAO,CAACS,QAAR,EAHmB;;AAIjC,gBAAID,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKE,SAAhC,EAA2C;AACvCH,cAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,oBAAyCJ,KAAzC;AACH;;AANgC,6CAQ1BD,MAR0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;AAWAN,WAAW,CAACG,YAAZ,CAAyBS,QAAzB,CAAkCP,GAAlC,CAAsC,UAACO,QAAD,EAAc;AAChD,MAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkBJ,SAAlC,EAA6C;AACzC;AACA,WAAOG,QAAQ,CAACC,IAAhB;AACH;;AAED,SAAOD,QAAP;AACH,CAPD,EAOG,UAACE,KAAD,EAAW;AAEV,MAAIA,KAAK,CAACF,QAAV,EAAoB;AAChB,UAAME,KAAK,CAACF,QAAZ;AACH;;AAED,MAAIE,KAAK,CAACV,OAAV,EAAmB;AACf,UAAMU,KAAK,CAACV,OAAZ;AACH,GARS,CAUV;;;AACA,QAAMU,KAAN;AACH,CAnBD;AAqBA,eAAed,WAAf","sourcesContent":["import axios from 'axios';\r\nimport Storage from '../Storage/Storage';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: `http://localhost:8080/api/v1`,\r\n    //timeout: 5000, // default is `0` (no timeout)\r\n    // responseType: 'json'\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n    // Handle token here ...\r\n    // attach token to header if exists\r\n    const token = Storage.getToken();\r\n    if (token !== null && token !== undefined) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data !== undefined) {\r\n        // only get data\r\n        return response.data;\r\n    }\r\n\r\n    return response;\r\n}, (error) => {\r\n\r\n    if (error.response) {\r\n        throw error.response;\r\n    }\r\n\r\n    if (error.request) {\r\n        throw error.request;\r\n    }\r\n\r\n    // Handle errors\r\n    throw error;\r\n});\r\n\r\nexport default axiosClient;"]},"metadata":{},"sourceType":"module"}