{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinaExamReactJs\\\\Frontend\\\\Front_end_Final_Exam_ReactJS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinaExamReactJs\\\\Frontend\\\\Front_end_Final_Exam_ReactJS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinaExamReactJs\\\\Frontend\\\\Front_end_Final_Exam_ReactJS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinaExamReactJs\\\\Frontend\\\\Front_end_Final_Exam_ReactJS\\\\src\\\\pages\\\\auth\\\\SignIn.js\";\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, CardBody, FormGroup, CustomInput, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport { Formik, FastField, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport LoginApi from '../../api/LoginApi';\nimport UserApi from '../../api/UserApi';\nimport Storage from \"../../Storage/Storage\";\nimport { toastr } from \"react-redux-toastr\";\nimport { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { setTokenInfo, setUserLoginInfo, setRememberMeInfo } from \"../../redux/actions/userLoginInfoActions\";\nimport avatar from \"../../assets/img/avatars/avatar.jpg\";\nimport { selectRememberMe } from \"../../redux/selectors/userLoginInfoSelector\";\n\nvar SignIn = function SignIn(props) {\n  var showWrongLoginNotification = function showWrongLoginNotification(title, message) {\n    var options = {\n      timeOut: 2500,\n      showCloseButton: false,\n      progressBar: false,\n      position: \"top-right\"\n    }; // show notification\n\n    toastr.error(title, message, options);\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpenModal = _useState2[0],\n      setOpenModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDisabledResendEmailButton = _useState6[0],\n      setDisabledResendEmailButton = _useState6[1];\n\n  var resendEmailToActiveAccount = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDisabledResendEmailButton(true); // call api\n\n              _context.next = 3;\n              return UserApi.resendEmailToActiveAccount(email);\n\n            case 3:\n              setDisabledResendEmailButton(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function resendEmailToActiveAccount() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useState7 = useState(props.isRememberMe),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isRememberMe = _useState8[0],\n      setRememberMe = _useState8[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Welcome to VTI Academy\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Sign in to your account to continue\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      password: '',\n      errorForm: ''\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().required('Required').max(50, 'Must be between 6 to 50 characters').min(6, 'Must be between 6 to 50 characters'),\n      password: Yup.string().max(50, 'Must be between 6 to 50 characters').min(6, 'Must be between 6 to 50 characters').required('Required')\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, _ref2) {\n        var setFieldError, result, user;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setFieldError = _ref2.setFieldError;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return LoginApi.login(values.username, values.password);\n\n              case 4:\n                result = _context2.sent;\n\n                // login successfully!\n                // account not active\n                if (result.status === \"NOT_ACTIVE\") {\n                  // open model \n                  setOpenModal(true);\n                  setEmail(result.email);\n                } else {\n                  // account actived\n                  // save remember me to storage\n                  Storage.setRememberMe(isRememberMe); // save token to storage\n\n                  Storage.setToken(result.token); // save user info to storage\n\n                  user = {\n                    \"firstname\": result.firstName,\n                    \"lastname\": result.lastName,\n                    \"username\": result.userName,\n                    \"email\": result.email,\n                    \"role\": result.role,\n                    \"status\": result.status\n                  };\n                  Storage.setUserInfo(user); // save remember me to redux\n\n                  props.setRememberMeInfo(isRememberMe); // save token to redux\n\n                  props.setTokenInfo(result.token); // save user info to redux\n\n                  props.setUserLoginInfo(user); // redirect home page\n\n                  props.history.push(\"/dashboard/default\");\n                }\n\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n\n                if (_context2.t0.status === 401) {\n                  showWrongLoginNotification(\"Login Failed\", \"Wrong username or password!\");\n                } else {\n                  setFieldError('errorForm', 'There is an error from the server');\n                  console.log(_context2.t0);\n                }\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 8]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, function (_ref4) {\n    var isSubmitting = _ref4.isSubmitting;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avatar,\n      alt: \"Chris Wood\",\n      className: \"img-fluid rounded-circle\",\n      width: \"132\",\n      height: \"132\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Username\",\n      bsSize: \"lg\",\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Enter your username\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Password\",\n      bsSize: \"lg\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Enter password\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/auth/reset-password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 23\n      }\n    }, \"Forgot password?\"))), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"errorForm\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"checkbox\",\n      id: \"rememberMe\",\n      label: \"Remember me next time\",\n      checked: isRememberMe,\n      onChange: function onChange(e) {\n        return setRememberMe(e.target.checked);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      size: \"lg\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, \"Sign in\"))))));\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, \"You need to confirm your account\"), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"m-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, \"Your account is not active.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, \"Please check your email (\", /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 38\n    }\n  }, email), \") to active account.\")), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: resendEmailToActiveAccount,\n    style: {\n      marginLeft: 10\n    },\n    disabled: isDisabledResendEmailButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, \"Resend\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: function onClick() {\n      return setOpenModal(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n};\n\nvar mapGlobalStateToProps = function mapGlobalStateToProps(state) {\n  return {\n    isRememberMe: selectRememberMe(state)\n  };\n};\n\nexport default connect(mapGlobalStateToProps, {\n  setTokenInfo: setTokenInfo,\n  setUserLoginInfo: setUserLoginInfo,\n  setRememberMeInfo: setRememberMeInfo\n})(SignIn);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/FinaExamReactJs/Frontend/Front_end_Final_Exam_ReactJS/src/pages/auth/SignIn.js"],"names":["React","Link","Button","Card","CardBody","FormGroup","CustomInput","Modal","ModalBody","ModalFooter","ModalHeader","Formik","FastField","Form","ErrorMessage","Yup","ReactstrapInput","LoginApi","UserApi","Storage","toastr","useState","connect","setTokenInfo","setUserLoginInfo","setRememberMeInfo","avatar","selectRememberMe","SignIn","props","showWrongLoginNotification","title","message","options","timeOut","showCloseButton","progressBar","position","error","isOpenModal","setOpenModal","email","setEmail","isDisabledResendEmailButton","setDisabledResendEmailButton","resendEmailToActiveAccount","isRememberMe","setRememberMe","username","password","errorForm","object","string","required","max","min","values","setFieldError","login","result","status","setToken","token","user","firstName","lastName","userName","role","setUserInfo","history","push","console","log","isSubmitting","display","e","target","checked","marginLeft","mapGlobalStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  CustomInput,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader\r\n} from \"reactstrap\";\r\nimport { Formik, FastField, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport LoginApi from '../../api/LoginApi';\r\nimport UserApi from '../../api/UserApi';\r\nimport Storage from \"../../Storage/Storage\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport { useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { setTokenInfo, setUserLoginInfo, setRememberMeInfo } from \"../../redux/actions/userLoginInfoActions\";\r\nimport avatar from \"../../assets/img/avatars/avatar.jpg\";\r\nimport { selectRememberMe } from \"../../redux/selectors/userLoginInfoSelector\";\r\n\r\nconst SignIn = (props) => {\r\n\r\n  const showWrongLoginNotification = (title, message) => {\r\n    const options = {\r\n      timeOut: 2500,\r\n      showCloseButton: false,\r\n      progressBar: false,\r\n      position: \"top-right\"\r\n    };\r\n\r\n    // show notification\r\n    toastr.error(title, message, options);\r\n  }\r\n\r\n  const [isOpenModal, setOpenModal] = useState(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isDisabledResendEmailButton, setDisabledResendEmailButton] = useState(false);\r\n\r\n  const resendEmailToActiveAccount = async () => {\r\n    setDisabledResendEmailButton(true);\r\n    // call api\r\n    await UserApi.resendEmailToActiveAccount(email);\r\n    setDisabledResendEmailButton(false);\r\n  }\r\n\r\n  const [isRememberMe, setRememberMe] = useState(props.isRememberMe);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"text-center mt-4\">\r\n        <h2>Welcome to VTI Academy</h2>\r\n        <p className=\"lead\">Sign in to your account to continue</p>\r\n      </div>\r\n\r\n      <Formik\r\n        initialValues={\r\n          {\r\n            username: '',\r\n            password: '',\r\n            errorForm: ''\r\n          }\r\n        }\r\n        validationSchema={\r\n          Yup.object({\r\n            username: Yup.string()\r\n              .required('Required')\r\n              .max(50, 'Must be between 6 to 50 characters')\r\n              .min(6, 'Must be between 6 to 50 characters'),\r\n\r\n            password: Yup.string()\r\n              .max(50, 'Must be between 6 to 50 characters')\r\n              .min(6, 'Must be between 6 to 50 characters')\r\n              .required('Required')\r\n          })\r\n        }\r\n        onSubmit={\r\n          async (values, { setFieldError }) => {\r\n            try {\r\n              // call api\r\n              const result = await LoginApi.login(values.username, values.password);\r\n\r\n              // login successfully!\r\n              // account not active\r\n              if (result.status === \"NOT_ACTIVE\") {\r\n                // open model \r\n                setOpenModal(true);\r\n                setEmail(result.email);\r\n\r\n              } else {\r\n                // account actived\r\n                // save remember me to storage\r\n                Storage.setRememberMe(isRememberMe);\r\n                // save token to storage\r\n                Storage.setToken(result.token);\r\n                // save user info to storage\r\n                const user = {\r\n                  \"firstname\": result.firstName,\r\n                  \"lastname\": result.lastName,\r\n                  \"username\": result.userName,\r\n                  \"email\": result.email,\r\n                  \"role\": result.role,\r\n                  \"status\": result.status\r\n                };\r\n                Storage.setUserInfo(user);\r\n\r\n                // save remember me to redux\r\n                props.setRememberMeInfo(isRememberMe)\r\n                // save token to redux\r\n                props.setTokenInfo(result.token);\r\n                // save user info to redux\r\n                props.setUserLoginInfo(user);\r\n\r\n                // redirect home page\r\n                props.history.push(\"/dashboard/default\");\r\n              }\r\n            } catch (error) {\r\n              if (error.status === 401) {\r\n                showWrongLoginNotification(\"Login Failed\", \"Wrong username or password!\");\r\n              } else {\r\n                setFieldError('errorForm', 'There is an error from the server');\r\n                console.log(error);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Card>\r\n            <CardBody>\r\n              <div className=\"m-sm-4\">\r\n                <div className=\"text-center\">\r\n                  <img\r\n                    src={avatar}\r\n                    alt=\"Chris Wood\"\r\n                    className=\"img-fluid rounded-circle\"\r\n                    width=\"132\"\r\n                    height=\"132\"\r\n                  />\r\n                </div>\r\n                <Form>\r\n\r\n                  {/* username */}\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Username\"\r\n                      bsSize=\"lg\"\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      placeholder=\"Enter your username\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  {/* password */}\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Password\"\r\n                      bsSize=\"lg\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Enter password\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                    {/* forgot password */}\r\n                    <small>\r\n                      <Link to=\"/auth/reset-password\">Forgot password?</Link>\r\n                    </small>\r\n                  </FormGroup>\r\n\r\n                  <ErrorMessage name=\"errorForm\" component={\"div\"} className=\"invalid-feedback\" style={{ display: \"block\" }} />\r\n\r\n                  {/* remember me */}\r\n                  <div>\r\n                    <CustomInput\r\n                      type=\"checkbox\"\r\n                      id=\"rememberMe\"\r\n                      label=\"Remember me next time\"\r\n                      checked={isRememberMe}\r\n                      onChange={e => setRememberMe(e.target.checked)}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* submit */}\r\n                  <div className=\"text-center mt-3\">\r\n                    <Button type=\"submit\" color=\"primary\" size=\"lg\" disabled={isSubmitting}>\r\n                      Sign in\r\n                  </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n\r\n      <Modal\r\n        isOpen={isOpenModal}\r\n      >\r\n        {/* header */}\r\n        <ModalHeader>\r\n          You need to confirm your account\r\n        </ModalHeader>\r\n\r\n        {/* body */}\r\n        <ModalBody className=\"m-3\">\r\n          <p>\r\n            Your account is not active.\r\n          </p>\r\n          <p>\r\n            Please check your email (<b>{email}</b>) to active account.\r\n          </p>\r\n        </ModalBody>\r\n\r\n        {/* footer */}\r\n        <ModalFooter>\r\n          {/* resend */}\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={resendEmailToActiveAccount}\r\n            style={{ marginLeft: 10 }}\r\n            disabled={isDisabledResendEmailButton}\r\n          >\r\n            Resend\r\n          </Button>\r\n\r\n          {/* close button */}\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => setOpenModal(false)}\r\n          >\r\n            Close\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nconst mapGlobalStateToProps = state => {\r\n  return {\r\n    isRememberMe: selectRememberMe(state)\r\n  };\r\n};\r\n\r\nexport default connect(mapGlobalStateToProps, { setTokenInfo, setUserLoginInfo, setRememberMeInfo })(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}